#SpringBoot读取配置文件顺序：
# bootstrap.yml>bootstrap.yaml>bootstrap.properties>nacos的配置>
#application.yml>application.yaml>application.properties

server:
  port: 8764
  servlet:
    context-path: /user-server


spring:
  application:
    name: user-server

  #如果使用Spring Boot 2.1及更高版本时候，
  #需要增加配置spring.main.allow-bean-definition-overriding=true
  main:
    allow-bean-definition-overriding: true
  mvc:
    servlet:
      load-on-startup: 0
    static-path-pattern: /static/**
  resources:
    static-locations: classpath:/static/

  freemarker:
    template-loader-path: classpath:/templates/
    suffix: .ftl
    charset: UTF-8
    request-context-attribute: request
    settings:
      number_format: 0.##########

  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
      config:
        server-addr: localhost:8848
        file-extension: yml

  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password: 123456
    timeout: 6000ms
    lettuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0

  datasource:
    url: jdbc:mysql://127.0.0.1:3306/test_zs?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: Zs11195310
    driver-class-name: com.mysql.cj.jdbc.Driver

mybatis-plus:
  mapper-locations: classpath*:mapping/*.xml
  type-aliases-package: com.cloud.common.entity
  type-enums-package: com.cloud.common.enums
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    auto-mapping-behavior: partial
  global-config:
    db-config:
      id-type: auto

###  xxl-job #############################################################
xxl:
  job:
    admin:
      #调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。
      #执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
      addresses: http://127.0.0.1:8080/xxl-job-admin
    #### 执行器通讯TOKEN [选填]：非空时启用；
    accessToken:
    executor:
      #### 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
      appname: xxl-job-executor-sample
      #### 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。
      #### 从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。
      address:
      ###执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，
      ###该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      ip:
      #### 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，
      #### 单机部署多个执行器时，注意要配置不同执行器端口；
      port: 9999
      #### 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
      logpath: /data/applogs/xxl-job/jobhandler
      #### 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
      logretentiondays: 30

  ### xxl-sso #############################################################
  sso:
    #SSO Server认证中心地址（推荐以域名方式配置认证中心，本机可参考章节"2.5"修改host文件配置域名指向）
    server: http://127.0.0.1:18080/xxl-sso-server
    ###### 注销登陆path，值为Client端应用的相对路径
    logout:
      path: /logout
    ###### 路径排除Path，允许设置多个，且支持Ant表达式。用于排除SSO客户端不需要过滤的路径
    excluded:
      paths:
    #### redis   // redis address, like "{ip}"\u3001"{ip}:{port}"\u3001
    #### "{redis/rediss}://xxl-sso:{password}@{ip}:{port:6379}/{db}"\uFF1BMultiple "," separated
    redis:
      address: redis://xxl-sso:123456@127.0.0.1:6379

seata:
  tx-service-group: my_test_tx_group

dubbo:
  application:
    id: ${spring.application.name}
    name: ${spring.application.name}
  scan:
    ##指定 Dubbo 服务实现类的扫描基准包
    base-packages: com.cloud.service
  protocol:
    ##服务暴露的协议配置，其中子属性 name 为协议名称
    name: dubbo
    ## port 为协议端口（ -1 表示自增端口，从 20880 开始）
    port: -1
  registry:
    #服务注册中心配置，其中子属性 address 的值 “spring-cloud://localhost”，说明挂载到 Spring Cloud 注册中心
    address: spring-cloud://localhost
    check: false
  consumer:
    check: false
    timeout: 6000
  cloud:
    ##要消费的服务名，强烈建议配置，多个，分开
    subscribed-services: payment-server
