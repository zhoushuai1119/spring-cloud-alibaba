<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>order-server</artifactId>
    <packaging>jar</packaging>

    <name>${project.artifactId}</name>
    <description>project for order-server</description>

    <!--父工程的依赖-->
    <parent>
        <groupId>io.github.zhoushuai1119</groupId>
        <artifactId>springcloud</artifactId>
        <version>${springcloud.version}</version>
    </parent>

    <dependencies>
        <!--common-server-->
        <dependency>
            <groupId>io.github.zhoushuai1119</groupId>
            <artifactId>common-server</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <!--多数据源配置-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
        </dependency>
        <!--elasticsearch-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
        </dependency>
        <!--mongodb-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <!--arthas-spring-boot-starter-->
        <dependency>
            <groupId>com.taobao.arthas</groupId>
            <artifactId>arthas-spring-boot-starter</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>order-server</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <!-- 具体参数详解：
                    -Xdebug 通知JVM工作在DEBUG模式下；
                    -Xrunjdwp 通知JVM使用(Java debug wire protocol)运行调试环境。该参数同时包含了一系列的调试选项；
                    **transport **指定了调试数据的传送方式，dt_socket是指用SOCKET模式，另有dt_shmem指用共享内存方式，其中，dt_shmem只适用于Windows平台；
                    address 调试服务器的端口号，客户端用来连接服务器的端口号；
                    server=y/n VM 是否需要作为调试服务器执行；
                    suspend=y/n 是否在调试客户端建立连接之后启动 VM -->
                    <jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,address=5005,server=y,suspend=n</jvmArguments>

                    <!--启动jar包命令:
                    java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -jar remote-debug-v1.0.jar-->
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
