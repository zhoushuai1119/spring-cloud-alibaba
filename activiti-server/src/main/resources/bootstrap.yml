#SpringBoot读取配置文件顺序：
# bootstrap.yml>bootstrap.yaml>bootstrap.properties>nacos的配置>
#application.yml>application.yaml>application.properties

server:
  port: 8761

spring:
  application:
    name: activiti-server

  #如果使用Spring Boot 2.1及更高版本时候，
  #需要增加配置spring.main.allow-bean-definition-overriding=true
  main:
    allow-bean-definition-overriding: true

  thymeleaf:
    cache: false
    encoding: UTF-8
    mode: LEGACYHTML5

  cloud:
    nacos:
      discovery:
        server-addr: 139.196.208.53:8848
        username: nacos
        password: nacos
      config:
        server-addr: 139.196.208.53:8848
        file-extension: yml
        username: nacos
        password: nacos

  redis:
    database: 0
    host: 139.196.208.53
    port: 6379
    password: 123456
    timeout: 6000ms
    lettuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0

  datasource:
    dynamic:
      #设置默认的数据源或者数据源组,默认值即为master
      primary: master
      #严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源
      strict: false
      datasource:
        master:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://139.196.208.53:3306/activiti?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false&testWhileIdle=false
          username: root
          password: Zs11195310

        slave:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://139.196.208.53:3306/shiro?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=falsec
          username: root
          password: Zs11195310


  #默认历史表不会生成，需要手动开启配置
  activiti:
    # 这条配置为true，会默认加在resources/processes包下的流程文件（.bpmn），如果流程文件没有会导致项目启动报错，可以设置为false
    # activiti7的自动识别processes下的bpmn文件，但是只会识别第一次，如果再次新建一个bpmn文件，再执行代码数据库里不会增加记录
    # 针对上述问题可以把数据库删除后可以部署
    check-process-definitions: false
    # 设置为true，如果库中没有activiti对应表，就创建
    database-schema-update: true
    db-history-used: true
    history-level: audit
    ## 在流程引擎启动就激活AsyncExecutor,异步true false关闭
    ## 不关闭会一直打印sql，建议关闭
    async-executor-activate: false


mybatis-plus:
  mapper-locations: classpath*:mapping/*.xml
  type-aliases-package: com.cloud.common.entity
  type-enums-package: com.cloud.common.enums
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    auto-mapping-behavior: partial
  global-config:
    db-config:
      id-type: assign_id


#seata分布式事务配置
seata:
  enabled: true
  application-id: ${spring.application.name}
  ##此处配置自定义的seata事务分组名称
  tx-service-group: ${spring.application.name}-tx-group
  ##开启数据库代理
  enable-auto-data-source-proxy: true
  registry:
    type: nacos
    nacos:
      application: seata-server
      server-addr: 139.196.208.53:8848
      username: nacos
      password: nacos

  config:
    type: nacos
    nacos:
      server-addr: 139.196.208.53:8848
      username: nacos
      password: nacos
      group: SEATA_GROUP
      data-id: seataServer.properties


#rocketmq配置
cloud:
  rocketmq:
    #不能使用name-server
    name-server: 139.196.208.53:9876
    #普通消息配置
    producer:
      group: p-${spring.application.name}

    #消费者配置
    consumer:
      #消费者组名称
      c-activiti-server:
        subscription:
          # topic : eventCode  最好都大写
          TP_ORDER_SERVER_TOPIC: EC_ORDER_SERVER
          TP_ORDER_SERVER_TOPIC_TRANSACTION: EC_ORDER_SERVER_TRANSACTION
          TP_PAYMENT_SERVER_TOPIC: EC_PAYMENT_SERVER
          #定时任务
          TP_F_SC: EC_TASK_ACTIVITI_JOB_TEST

  #定时任务配置
  time-based-job:
    enabled: true
    thread-pool-size: 20
    discardTaskSeconds: 300


logging:
  level:
    RocketmqClient: error
    RocketmqRemoting: warn


#hystrix的超时时间
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 20000

feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        #不设置connectTimeout会导致readTimeout设置不生效
        connectTimeout: 20000
        readTimeout: 20000

