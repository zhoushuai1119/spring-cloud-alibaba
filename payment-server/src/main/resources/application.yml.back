server:
  port: 8764
  servlet:
    context-path: /payment-server

spring:
  application:
    name: payment-server

  profiles:
    active: dev

  cloud:
    nacos:
      discovery:
        server-addr: 139.196.208.53:8848
        username: nacos
        password: nacos

  #如果使用Spring Boot 2.1及更高版本时候，
  #需要增加配置spring.main.allow-bean-definition-overriding=true
  main:
    allow-bean-definition-overriding: true

  redis:
    database: 0
    host: 139.196.208.53
    port: 6379
    password: 123456
    timeout: 6000ms
    lettuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0

  datasource:
    dynamic:
      #设置默认的数据源或者数据源组,默认值即为master
      primary: master
      #严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源
      strict: false
      datasource:
        master:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://139.196.208.53:3306/cloud?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false&testWhileIdle=false
          username: root
          password: Zs11195310

#        slave:
#          driver-class-name: com.mysql.cj.jdbc.Driver
#          url: jdbc:mysql://139.196.208.53:3306/shiro?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false&testWhileIdle=false
#          username: root
#          password: Zs11195310


#rocketmq配置
cloud:
  web:
    #开启全局异常捕获
    globalExceptionHandler:
      enabled: true
    swagger:
      basePackage: com.cloud.payment.controller

    #redisson配置
    redisson:
      enabled: true
      nodes: 139.196.208.53:6379
      password: Zs11195310
      timeout: 3000
      scanInterval: 1000
      connectionPoolSize: 64
      connectionMinimumIdleSize: 10
      pingConnectionInterval: 1000

  rocketmq:
    #不能使用name-server
    name-server: 139.196.208.53:9876
    #普通消息配置
    producer:
      group: p-${spring.application.name}

    #消费者配置
    consumer:
      #消费者组名称
      c-payment-server:
        subscription:
          # topic : eventCode  最好都大写
          TP_PAYMENT_SERVER_TOPIC: EC_PAYMENT_SERVER
          TP_PAYMENT_SERVER_TOPIC_TRANSACTION: EC_PAYMENT_SERVER_TRANSACTION
          #定时任务
          TP_F_SC: EC_TASK_PAYMENT_JOB_TEST
  #定时任务配置
  time-based-job:
    enabled: true
    thread-pool-size: 20
    discardTaskSeconds: 300


mybatis-plus:
  mapper-locations: classpath*:mapping/*.xml
  type-aliases-package: com.cloud.payment.domain.entity
  type-enums-package: com.cloud.payment.enums
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    auto-mapping-behavior: partial
  global-config:
    db-config:
      id-type: auto


#seata分布式事务配置
seata:
  enabled: true
  application-id: ${spring.application.name}
  ##此处配置自定义的seata事务分组名称
  tx-service-group: ${spring.application.name}-tx-group
  ##开启数据库代理
  enable-auto-data-source-proxy: true
  registry:
    type: nacos
    nacos:
      application: seata-server
      server-addr: 139.196.208.53:8848
      username: nacos
      password: nacos

  config:
    type: nacos
    nacos:
      server-addr: 139.196.208.53:8848
      username: nacos
      password: nacos
      group: SEATA_GROUP
      data-id: seataClient.properties


logging:
  level:
    RocketmqClient: error
    RocketmqRemoting: warn

#hystrix的超时时间
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 5000

feign:
  hystrix:
    enabled: true
  client:
    config:
      default: #设置全局超时时间
        connectTimeout: 2000  #请求连接的超时时间
        readTimeout: 5000     #请求处理的超时时间
